<?xml version="1.0" encoding="UTF-8"?>
<!--
 *   
 * This is a simple Content Management System (CMS)
 * Copyright (C) 2011 Imran M Yousuf (imyousuf@smartitengineering.com)
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.smartitengineering.smart-cms</groupId>
  <artifactId>cms-codegenerator-demo</artifactId>
  <parent>
    <groupId>com.smartitengineering.smart-cms</groupId>
    <artifactId>code-generation</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>CMS Code Generator Demo</name>
  <dependencies>
    <dependency>
      <groupId>com.smartitengineering.smart-cms</groupId>
      <artifactId>content-repo-dao-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.smartitengineering.smart-util</groupId>
      <artifactId>smart-bean-guice-util</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.smartitengineering.smart-cms</groupId>
        <artifactId>cms-tools-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/cms-tools/</outputDirectory>
          <solrHomeDirectory>../../solr/sample-conf/</solrHomeDirectory>
          <solrArtifact>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr</artifactId>
            <version>${solr.version}</version>
          </solrArtifact>
          <eventHubArtifact>
            <groupId>com.smartitengineering.event</groupId>
            <artifactId>hub-hbase</artifactId>
            <version>${hub.version}</version>
          </eventHubArtifact>
          <!-- Other configurations and their default expressions -->
          <!--
          <zooKeeperPort>2181</zooKeeperPort>
          <embeddedPort>40404</embeddedPort>
          <hbaseVersion>${hbase.version}</hbaseVersion>
          <hadoopVersion>${hadoop.version}</hadoopVersion>
          <jerseyVersion>${jersey.version}</jerseyVersion>
          -->
        </configuration>
        <executions>
          <execution>
            <id>start-cms-tool-suite</id>
            <phase>test-compile</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <!-- By default it is set to false, which means manual invokation would result a running CMS container -->
              <daemonMode>true</daemonMode>
            </configuration>
          </execution>
          <execution>
            <id>stop-cms-tool-suite</id>
            <phase>package</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.smartitengineering.smart-cms</groupId>
        <artifactId>maven-pojo-generator-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/generated-sources/cms-pojo/</outputDirectory>
          <workspaceId>p:q</workspaceId>
        </configuration>
        <executions>
          <execution>
            <id>generate-pojo-example</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <contentTypeResource>${basedir}/src/main/resources/content-type-example.xml</contentTypeResource>
              <packageForGuiceMasterModule>com.embarcadero.edn</packageForGuiceMasterModule>
              <typeFiles>
                <typeFile>content-type-example.xml</typeFile>
              </typeFiles>
              <transactionEnabled>true</transactionEnabled>
            </configuration>
          </execution>
          <execution>
            <id>generate-pojo-file</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <contentTypeResource>${basedir}/src/main/resources/content-type-def-with-composition.xml</contentTypeResource>
              <packageForGuiceMasterModule>test.di</packageForGuiceMasterModule>
              <typeFiles>
                <typeFile>content-type-def-with-composition.xml</typeFile>
              </typeFiles>
            </configuration>
          </execution>
          <execution>
            <id>generate-pojo-resource</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <contentTypeResource>${basedir}/src/main/resources/content-type-def-with-composition_1.xml</contentTypeResource>
              <packageForGuiceMasterModule>testa.di</packageForGuiceMasterModule>
              <typeFiles>
                <typeFile>content-type-def-with-composition_1.xml</typeFile>
              </typeFiles>
            </configuration>
          </execution>
          <execution>
            <id>generate-pojo-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <contentTypes>
                <contentType>${basedir}/src/main/resources/content-type-def-with-composition_2.xml</contentType>
                <contentType>${basedir}/src/main/resources/content-type-def-with-composition_3.xml</contentType>
              </contentTypes>
              <typeFiles>
                <typeFile>content-type-def-with-composition_2.xml</typeFile>
                <typeFile>content-type-def-with-composition_3.xml</typeFile>
              </typeFiles>
              <packageForGuiceMasterModule>testb.di</packageForGuiceMasterModule>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>4.8.2</junit.version>
  </properties>
</project>
